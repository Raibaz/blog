<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>service worker on Raibaz.</title><link>http://example.org/tags/service-worker/</link><description>Recent content in service worker on Raibaz.</description><generator>Hugo -- gohugo.io</generator><language>it-it</language><lastBuildDate>Wed, 23 Oct 2019 07:38:36 +0000</lastBuildDate><atom:link href="http://example.org/tags/service-worker/index.xml" rel="self" type="application/rss+xml"/><item><title>Aggiornamenti automatici delle applicazioni Angular con service worker</title><link>http://example.org/2019/10/aggiornamenti-automatici-delle-applicazioni-angular-con-service-worker/</link><pubDate>Wed, 23 Oct 2019 07:38:36 +0000</pubDate><guid>http://example.org/2019/10/aggiornamenti-automatici-delle-applicazioni-angular-con-service-worker/</guid><description>Nel lungo post precedente abbiamo visto come fare per spacchettare in due un monolite e rendere autonoma la single page application, sviluppata con Angular 8, che costituisce il frontend del progetto su cui lavoro.
Rendere del tutto indipendente l’applicazione frontend da quella backend, però, ha un effetto collaterale piuttosto interessante: una volta che hai una single page application servita come un set di file HTML/CSS/JS statici, nulla vieta agli utenti di aprire l’applicazione una volta nella vita, tenere aperto il tab del browser per sempre e non aggiornarla mai.</description></item></channel></rss>